# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                           controllers.HomeController.index



# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout



# User Registration and password handling
GET     /signup                                     securesocial.controllers.Registration.startSignUp
POST    /signup                                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token                              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token                              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                                      securesocial.controllers.Registration.startResetPassword
POST    /reset                                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token                               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token                               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                                   securesocial.controllers.PasswordChange.page
POST    /password                                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider                     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider                     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized                             securesocial.controllers.ProviderController.notAuthorized

#Device
OPTIONS /api/ios/device                             controllers.api.ios.DeviceService.options
GET     /api/ios/device                             controllers.api.ios.DeviceService.all
GET     /api/ios/device/:id                         controllers.api.ios.DeviceService.show(id: Long)
POST    /api/ios/device                             controllers.api.ios.DeviceService.create
PUT     /api/ios/device/:id                         controllers.api.ios.DeviceService.save(id: Long)
DELETE  /api/ios/device/:id                         controllers.api.ios.DeviceService.delete(id: Long)

#News
OPTIONS /api/news                                   controllers.api.NewsService.options
GET     /api/news                                   controllers.api.NewsService.all
GET     /api/news/:id                               controllers.api.NewsService.show(id: Long)
POST    /api/news                                   controllers.api.NewsService.create
PUT     /api/news/:id                               controllers.api.NewsService.save(id: Long)
DELETE  /api/news/:id                               controllers.api.NewsService.delete(id: Long)

# News
GET     /news                                       controllers.NewsController.index
GET     /news/createForm                            controllers.NewsController.createForm
GET     /news/:id/updateForm                        controllers.NewsController.updateForm(id:Long)
POST    /news/create                                controllers.NewsController.create
POST    /news/:id/update                            controllers.NewsController.update(id: Long)
GET     /news/:id/delete                            controllers.NewsController.delete(id: Long)

#Notification
POST    /api/ios/notification/register              controllers.api.ios.NotificationService.register
POST    /api/ios/notification/push                  controllers.api.ios.NotificationService.push

#Wordpress
GET     /api/wordpress/authors                      controllers.api.WordPressService.authors
GET     /api/wordpress/tags                         controllers.api.WordPressService.tags
GET     /api/wordpress/categories                   controllers.api.WordPressService.categories
GET     /api/wordpress/category/:id/posts           controllers.api.WordPressService.categoryPosts(id: Long , count: Option[Int] , page: Option[Int] )
GET     /api/wordpress/category/:id/posts/ids       controllers.api.WordPressService.categoryPostsIds(id: Long , count: Option[Int] , page: Option[Int] )
GET     /api/wordpress/tag/:id/posts                controllers.api.WordPressService.tagPosts(id: Long , count: Option[Int] , page: Option[Int] )
GET     /api/wordpress/tag/:id/posts/ids            controllers.api.WordPressService.tagPostsIds(id: Long , count: Option[Int] , page: Option[Int] )
GET     /api/wordpress/author/:id/posts             controllers.api.WordPressService.authorPosts(id: Long , count: Option[Int] , page: Option[Int] )
GET     /api/wordpress/author/:id/posts/ids         controllers.api.WordPressService.authorPostsIds(id: Long , count: Option[Int] , page: Option[Int] )
GET     /api/wordpress/posts/recent                 controllers.api.WordPressService.recentPosts( count: Option[Int] , page: Option[Int] )
GET     /api/wordpress/posts/recent/ids             controllers.api.WordPressService.recentPostsIds( count: Option[Int] , page: Option[Int] )
GET     /api/wordpress/post/:id                     controllers.api.WordPressService.showPost(id: Long)

#GitHub
GET     /api/github/repositories                    controllers.api.GitHubService.repositories
GET     /api/github/users                           controllers.api.GitHubService.users
GET     /api/github/owners                          controllers.api.GitHubService.owners

#EventBrite
GET     /api/eventbrite/events                      controllers.api.EventBriteService.events

#Twitter
GET     /api/twitter/authenticate                   controllers.api.TwitterService.authenticate
GET     /api/twitter/timeline                       controllers.api.TwitterService.timeline


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                               controllers.Assets.at(path="/public", file)
